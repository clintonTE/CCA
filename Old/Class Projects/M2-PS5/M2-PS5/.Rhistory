rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
rtvs::debug_source("script.R")
install.packages("Matrix")
diag(ncol(Za))
diag(ncol(5))
diag(5)
H=matrix(rep(1,9),nrow=3)
H/(row(H)+col(H)-1)
H = H / (row(H) + col(H) - 1)
crossprod(H)
t(H)%*%solve(t(H)%*%H)%*%H
crossprod(H)
H%*%solve(t(H)%*%H)%*%t(H)
backsolve(chol(crossprod(H)))
backsolve(chol(crossprod(H)),diag(3))
qr.R(qr(H%*%solve(t(H)%*%H)%*%t(H)))
tcrossprod(H%*%backsolve(chol(crossprod(H)),diag(3)))
H%*%solve(t(H)%*%H)%*%t(H))
H%*%solve(t(H)%*%H)%*%t(H)
tcrossprod(H%*%backsolve(chol(crossprod(H)),diag(3)))
tcrossprod(H%*%backsolve(chol(crossprod(H)),diag(3)))
t(H)%*%solve(t(H)%*%H)%*%H
tcrossprod(H%*%backsolve(chol(crossprod(H)),diag(3)))
H%*%solve(t(H)%*%H)%*%t(H)
rtvs::debug_source("M2-PS2-Problem1.R")
rtvs::debug_source("M2-PS2-Problem1.R")
rtvs::debug_source("M2-PS2-Problem1.R")
rtvs::debug_source("M2-PS2-Problem1.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
install.packages("AER")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
head(mX)
rtvs::debug_source("M2-PS5-Problem 3.R")
chol(crossprod(mZa))
rtvs::debug_source("M2-PS5-Problem 3.R")
chol(crossprod(mXTild))
head(XTild)
head(mXTild)
head(mPza)
head(crossprod(mXTild))
chol(crossprod(mXTild))
head(mX)
head(mW)
head(mZ)
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
head(read.table("acemoglu.dat", header = TRUE));
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
mWhiteErrors
rownames(vB)
colnames(mX)
head(mX)
rtvs::debug_source("M2-PS5-Problem 3.R")
head(mx)
head(mX)
head(tbAcemoglu$Exprop)
rtvs::debug_source("M2-PS5-Problem 3.R")
head(mX)
head(tbAcemoglu["Exprop"])
head(matrix(tbAcemoglu["Exprop"], nrow = iNumPts, dimnames = dimnames(tbAcemoglu["Exprop"])))
head(matrix(tbAcemoglu["Exprop"], nrow = iNumPts))
head(tbAcemoglu["Exprop"])
head(matrix(tbAcemoglu[["Exprop"]], nrow = iNumPts))
head(matrix(tbAcemoglu[["Exprop"]], nrow = iNumPts, dimnames = dimnames(tbAcemoglu["Exprop"])))
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
print(sqrt(diag(GetMWhiteErrors(cbind(mW[, 2], mX, mW[, 1]), vOLSResid))));
head(vY - cbind(mX, mW) %*% vOLS)
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
lm(spec, data = tbAcemoglu)
print(lm(spec, data = tbAcemoglu))
Summary(lm(spec, data = tbAcemoglu))
summary(lm(spec, data = tbAcemoglu))
print(cbind(mOLSMWSE[3], mOLSMWSE[1], mOLSMWSE[2]))
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
head(t(resid) %*% resid %*% mXspXsinv)
head(resid)
sum(t(resid) %*% resid)
rtvs::debug_source("M2-PS5-Problem 3.R")
var(resid)
rtvs::debug_source("M2-PS5-Problem 3.R")
var(resid)
mXspXsinv
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
var(resid) * mXspXsinv
var(resid)
mXspXsinv
mXspXsinv * var(resid)
mXspXsinv * rep(var(resid),3)
mXspXsinv %*% rep(var(resid),3)
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
print(sqrt(diag(vcovHC(aerReg))));
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
head(mX)
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
head(mXspXsinv %*% crossprod(mXTild, vY))
rtvs::debug_source("M2-PS5-Problem 3.R")
head(mXspXsinv %*% t(mXTild)%*%vY)
head(mXspXsinv %*% crossprod(mXTild, vY))
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
ncol(mXW)
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
?ivreg
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3.R")
install.packages("AER")
install.packages("sandwich")
rtvs::debug_source("M2-PS5-Problem 3.R")
rtvs::debug_source("M2-PS5-Problem 3 v.02")
rtvs::debug_source("M2-PS5-Problem 3 v02.R")
rtvs::debug_source("M2-PS5-Problem 3 v02.R")
rtvs::debug_source("M2-PS5-Problem 3 v02.R")
rtvs::debug_source("M2-PS5-Problem 3 v02.R")
